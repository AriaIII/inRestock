security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    providers:
        user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:

        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/
            anonymous: true
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
       
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/backend, roles: ROLE_MANAGER }
        # - { path: ^/profile, roles: ROLE_USER }

    access_denied_url: /

    role_hierarchy:
        ROLE_ADMIN : ROLE_MANAGER
        ROLE_MANAGER: ROLE_USER
        ROLE_USER: ROLE_APPRENTI

